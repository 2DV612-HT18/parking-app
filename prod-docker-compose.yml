version: "3"

services:
  backend:
    build:
      context: backend
      dockerfile: Build.dockerfile
    env_file:
      - .env.prod.local
    environment:
      NODE_ENV: production
      SITE_BASE_URL: https://cscloud455.lnu.se
    links:
      - db
    networks:
    - postgres
    - parkingapp
    - redis
    ports:
      - "4000:4000"
    volumes:
      - /opt/app/node_modules
    command: ["npm", "run", "serve"]

  nginx:
    image: nginx
    environment:
      SERVER_NAME: cscloud455.lnu.se
    depends_on:
      - backend
      - frontend
      # - letsencrypt-certbot
    networks:
      - parkingapp
    ports:
      - 80:80
      - 443:443
      - 81:81
      - 444:444
    volumes:
     - frontend:/var/www/app/
    #  - nginx-certs:/etc/nginx/certs:ro
     - ./nginx/backup.tar:/etc/nginx/backup.tar
     - ./nginx/nginx.conf:/etc/nginx/nginx.template
     - ./nginx/backend.conf:/etc/nginx/sites-enabled/backend.template
     - ./nginx/frontend.conf:/etc/nginx/sites-enabled/frontend.template
     - ./nginx/run_nginx.sh:/etc/nginx/run_nginx.sh
    command: ./etc/nginx/run_nginx.sh

  frontend:
    build:
      context: frontend
      dockerfile: Build.dockerfile
    volumes:
      - frontend:/opt/app/dist
      - /opt/app/node_modules

  # letsencrypt-certbot:
  #   image: pierreprinetti/certbot
  #   ports:
  #     - 80:80
  #     - 443:443
  #     - 81:81
  #     - 444:444
  #   volumes:
  #     - nginx-certs:/etc/letsencrypt/
  #   environment:
  #     http_proxy: "$http_proxy"
  #     # domains: cscloud486.lnu.se #,www.cscloud486.lnu.se
  #     domains: cscloud455.lnu.se
  #     email: tobiasbernting@gmail.com

  db:
    image: postgres:latest
    env_file:
      - .env.prod.local
    ports:
      - 5432:5432
    networks:
      - postgres
    volumes:
      - postgres-db:/var/lib/postgresql/data

  redis:
    image: redis:latest
    volumes:
      - redis:/var/lib/redis/data
    ports:
      - "6379:6379"
    networks:
      - redis

networks:
  parkingapp:
  postgres:
    driver: bridge
  redis:
    driver: bridge
volumes:
  postgres-db:
  redis:
  frontend:
  # nginx-certs: